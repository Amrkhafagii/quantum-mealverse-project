
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Add Quantum styles */
:root {
  --quantum-black: #0D1117;
  --quantum-dark-blue: #161B22;
  --quantum-cyan: #23CFC9;
  --quantum-cyan-dark: #18a29e;
  --quantum-accent: #339af0;
  --quantum-highlight: #f44336;
  
  /* Safe area variables that will be populated on mobile devices */
  --sat: env(safe-area-inset-top, 0px);
  --sar: env(safe-area-inset-right, 0px);
  --sab: env(safe-area-inset-bottom, 0px);
  --sal: env(safe-area-inset-left, 0px);
}

@layer components {
  .quantum-gradient {
    @apply bg-gradient-to-r from-quantum-cyan to-quantum-accent;
  }
  
  .quantum-highlight {
    @apply text-quantum-highlight;
  }
  
  .quantum-border {
    @apply border-quantum-cyan/30;
  }
  
  .quantum-bg {
    @apply bg-quantum-dark-blue;
  }
  
  /* Mobile-specific utilities */
  .ios-safe-area {
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
  }
  
  .android-safe-area {
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
  }
  
  /* Safe area utility classes */
  .pt-safe {
    padding-top: max(1rem, env(safe-area-inset-top));
  }
  
  .pb-safe {
    padding-bottom: max(1rem, env(safe-area-inset-bottom));
  }
  
  .pl-safe {
    padding-left: max(1rem, env(safe-area-inset-left));
  }
  
  .pr-safe {
    padding-right: max(1rem, env(safe-area-inset-right));
  }
  
  .px-safe {
    padding-left: max(1rem, env(safe-area-inset-left));
    padding-right: max(1rem, env(safe-area-inset-right));
  }
  
  .mobile-container {
    @apply px-3 py-2 mx-0;
  }
  
  .mobile-bottom-spacing {
    padding-bottom: calc(16px + env(safe-area-inset-bottom));
  }
  
  .mobile-top-spacing {
    padding-top: calc(16px + env(safe-area-inset-top));
  }
  
  /* Touch interaction feedback */
  .touch-feedback {
    @apply transition-opacity active:opacity-70;
  }
  
  /* Improved form elements for touch */
  .touch-input {
    @apply h-12 text-base;
  }
  
  .touch-button {
    @apply h-12 min-w-[44px] text-base;
  }
}

/* Tailwind base styles */
/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
  /* 2. Add default `margin` of 0 */
  margin: 0;
}

/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}

/*
  Typographic tweaks:
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/*
  7. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/*
  8. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

/* Gesture hint animations */
@keyframes swipe-hint {
  0% { transform: translateX(0); opacity: 0.8; }
  50% { transform: translateX(20px); opacity: 1; }
  100% { transform: translateX(0); opacity: 0.8; }
}

.swipe-hint {
  animation: swipe-hint 2s ease-in-out infinite;
}

@keyframes pinch-hint {
  0% { transform: scale(1); opacity: 0.8; }
  50% { transform: scale(1.2); opacity: 1; }
  100% { transform: scale(1); opacity: 0.8; }
}

.pinch-hint {
  animation: pinch-hint 2s ease-in-out infinite;
}
